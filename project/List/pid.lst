C251 COMPILER V5.60.0,  pid                                                                27/01/24  11:12:03  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE pid
OBJECT MODULE PLACED IN .\List\pid.obj
COMPILER INVOKED BY: G:\KEIL_CORE\C251\BIN\C251.EXE ..\user\src\pid.c XSMALL INTR2 BROWSE INCDIR(..\driver\include;..\pe
                    -ripheral\header;..\user\include) DEBUG PRINT(.\List\pid.lst) OBJECT(.\List\pid.obj) 

stmt  level    source

    1          /*
    2           * PID Controller Implementation in C
    3           * 
    4           * Created by Joshua Saxby (aka @saxbophone) on 1 Jan, 2016
    5           * 
    6           * My own attempt at implementing the PID algorithm in some (hopefully) clean, understandable C.
    7           *
    8           * See LICENSE for licensing details.
    9           */
   10          
   11          #include "pid.h"
   12          
   13          
   14          PID_State* pid_iterate(PID_Calibration * calibration, PID_State * state) 
   15          {
   16   1              float error,derivative;
   17   1          // calculate difference between desired and actual values (the error)
   18   1          error = state->target - state->actual;
   19   1          // calculate and update integral
   20   1          state->integral += (error * state->time_delta);
   21   1          // calculate derivative
   22   1          derivative = (error - state->previous_error) / state->time_delta;
   23   1          // calculate output value according to algorithm
   24   1          state->output = (
   25   1              (calibration->kp * error) + (calibration->ki * state->integral) + (calibration->kd * derivative)
   26   1          );
   27   1          // update state.previous_error to the error value calculated on this iteration
   28   1          state->previous_error = error;
   29   1          // return the state struct reflecting the calculations
   30   1          return state;
   31   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       165     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
